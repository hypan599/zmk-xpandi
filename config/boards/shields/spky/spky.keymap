#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define HYP LS(LC(LA(LCMD)))
#define MEH LS(LC(LALT))
#define HYPER_Y LS(LC(LA(LG(Y))))
#define MO_TOG(layer) &mo_tog layer layer

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

/ {
        behaviors {
            mo_tog: behavior_mo_tog {
                compatible = "zmk,behavior-hold-tap";
                label = "mo_tog";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                bindings = <&mo>, <&tog>;
            };
            
//            inc_dec_mwh: behavior_sensor_rotate_mouse_wheel {
//                compatible = "zmk,behavior-sensor-rotate-var";
//                label = "ENC_MOUSE_WHEEL";
//                #sensor-binding-cells = <2>;
//                bindings = <&mwh>, <&mwh>;
//            };
//
//            inc_dec_mmv: behavior_sensor_rotate_mouse_movement {
//                compatible = "zmk,behavior-sensor-rotate-var";
//                label = "ENC_MOUSE_MOVEMENT";
//                #sensor-binding-cells = <2>;
//                bindings = <&mmv>, <&mmv>;
//            };


            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <400>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
        
        macros {
            ZMK_MACRO(mwpin,
                wait-ms = <40>;
                tap-ms = <40>;
                bindings
                    =   <&kp N2 &kp N0 &kp N2 &kp N0>
                    ,   <&kp N0 &kp N3 &kp N0 &kp N2>
                    ,   <&kp ENTER>
                    ;
            )
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
&kp GRAVE    &kp N1        &kp N2          &kp N3       &kp N4          &kp N5                                      &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp EQUAL
&kp TAB      &kp Q         &kp W           &kp E        &kp R           &kp T                                       &kp Y           &kp U           &kp I           &kp O           &kp P           &kp MINUS
&kp ESC      &hm MEH A     &hm LCTRL S     &hm LALT D   &hm LCMD F      &hm HYP G       &kp K_MUTE  &kp C_PP        &hm HYP H       &hm RCMD J      &hm RALT K      &hm RCTRL L     &hm MEH SEMI    &kp SQT
&kp LCTRL    &kp Z         &kp X           &kp C        &kp V           &kp B                                       &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &kp RCTRL
                                                        &kp LSHIFT      &kp SPACE       &kp ENTER   &mo_tog 1 1     &kp BSPC        &kp RCMD
                                                                        &kp LCTRL       &kp DEL     &lt 2 TAB       &kp RALT
                        >;
                        sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
                };
                
                l1_layer {
                        bindings = <
&trans       &trans         &trans          &trans      &trans          &trans                                      &trans          &trans          &trans          &trans          &trans          &trans
&trans       &kp GRAVE      &kp N7          &kp N8      &kp N9          &kp N0                                      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT &trans          &trans
&kp LBKT     &hm MEH RBKT   &hm LCTRL N4    &hm LALT N5 &hm LCMD N6     &hm HYP EQUAL   &kp K_MUTE  &kp C_PP        &hm HYP GRAVE   &hm RCMD LEFT   &hm RALT DOWN   &hm RCTRL UP    &hm MEH RIGHT   &trans
&trans       &kp NUBS       &kp N1          &kp N2      &kp N3          &kp MINUS                                   &mkp MB1        &mkp MB2        &mkp MB3        &mwpin          &key_repeat     &trans
                                                        &trans          &trans          &trans      &tog 1          &trans          &trans
                                                                        &trans          &trans      &trans          &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
                };

                fn_layer {
                        bindings = <
&trans      &kp F16         &kp F17         &kp F18     &kp F19         &kp F20                                     &trans          &trans          &trans         &trans           &trans          &bt BT_CLR
&trans      &kp F15         &kp F7          &kp F8      &kp F9          &kp F10                                     &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3     &bt BT_SEL 4    &trans
&trans      &kp F14         &kp F4          &kp F5      &kp F6          &kp F11         &trans      &trans          &trans          &trans          &trans         &trans           &trans          &trans
&trans      &kp F13         &kp F1          &kp F2      &kp F3          &kp F12                                     &trans          &trans          &trans         &trans           &trans          &trans
                                                        &trans          &trans          &none       &none           &trans          &trans
                                                                        &trans          &trans      &trans          &trans
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
        };
};
